* Fix Stream Downscale Encoding
* https
* Viewer username and password with basic auth
* create uri for stream that hides stream key. https://benwilber.github.io/streamboat.tv/nginx/rtmp/streaming/2016/10/22/implementing-stream-keys-with-nginx-rtmp-and-django.html
  - RTMP app for uploading that pushes to another which is what everyone else connects to.
  - Node/Something server for logic of what stream keys (make stream keys file or db of some sort)
  - change push to exec_push with ffmpeg (script that reads config) to make low/med/hi bandwidth options (front end or backend?) https://github.com/arut/nginx-rtmp-module/wiki/Directives#hls_variant
* Diskless transcoding mode by having configurable exec push output to a pipe that pipes to whatever
  - ffmpeg makes hls with exec push, no more nginx-rtmp hls.
  - Set remote hls server with env, in entrypoint configure ffmpeg command as a different env.
  - use pipe: https://ffmpeg.org/ffmpeg-protocols.html#pipe into hls: https://ffmpeg.org/ffmpeg-formats.html#hls-2
  
* Learn Ansible and see if i can create some "distributed mode" and "monolithic mode" startup scripts with and without provisioning

* Improve look and feel of page
* Multiple web containers: https://blog.florianlopes.io/host-multiple-websites-on-single-host-docker/
* Make Blog (empty at first) and docker compose to spin up reverse proxy that fowards to each other container.

* Blog ideas
  -Host myself, maybe with a post endpoint to take input, takes markdown and generates html content.
  -Bootstrap? Ghost?
  -Login/Auth System with it's own page/popup (not html basic)
    - DB store encrypted salted hashes and auth that https://dev.to/werner/practical-rust-web-development-authentication-3ppg
    - Support OAuth2 from google/facebook (use Auth0 potentially)
  -Later on add comments/upvote system 
